# Shadowrocket小火箭配置文件
# 请根据自身需求修改配置。


[General]
# 旁路系统 - 防止系统功能异常（如推送通知延迟）
bypass-system = true

# 跳过代理 - 这些地址不走代理，包括局域网、Apple captive portal、中国银行、百度
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,captive.apple.com,*.ccb.com,*.abchina.com.cn,*.psbc.com,www.baidu.com

# TUN旁路路由 - 让非TCP协议绕过VPN隧道
tun-excluded-routes = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32, 239.255.255.250/32

# DNS服务器 - 使用DoH加密DNS（doh.pub/阿里DNS）+ 传统DNS备用
dns-server = https://doh.pub/dns-query,https://dns.alidns.com/dns-query,223.5.5.5,119.29.29.29

# 备用DNS - 主DNS失败时回退到系统DNS
fallback-dns-server = system

# IPv6支持 - 启用IPv6但优先使用IPv4
ipv6 = true
prefer-ipv6 = false

# DNS设置
dns-direct-system = false  # 直连规则不使用系统DNS
icmp-auto-reply = true  # 自动回复ping请求
always-reject-url-rewrite = false  # REJECT重写规则仅在配置模式生效
private-ip-answer = true  # 允许DNS返回私有IP（防止误判劫持）
dns-direct-fallback-proxy = true  # 直连域名解析失败时使用代理

# DNS劫持 - 拦截硬编码的Google DNS查询
hijack-dns = 8.8.8.8:53,8.8.4.4:53

# UDP回退策略 - 不支持UDP的节点将拒绝UDP流量
udp-policy-not-supported-behaviour = REJECT

[Proxy Group]

🚀 策略选择 = select,♻️ ALL,🇨🇳 台湾节点,🇬🇧 英国节点,🇯🇵 日本节点,🇭🇰 香港节点,🇸🇬 新加坡节点,🇺🇸 美国节点,🇰🇷 韩国节点,🇷🇺 俄罗斯节点,🇮🇳 印度,🇩🇪 德国,🇨🇦 加拿大,interval=600,timeout=5,select=0,url=http://www.gstatic.com/generate_204
♻️ ALL = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=.*
🤖️ AI = select,🚀 策略选择,🇺🇸 美国节点,🇨🇳 台湾节点,🇸🇬 新加坡节点,🇯🇵 日本节点,🇬🇧 英国节点,🇩🇪 德国,🇨🇦 加拿大, select=0
🍎 苹果服务 = select, DIRECT, 🚀 策略选择, select=0
🇭🇰 香港节点 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=(?=.*(港|HK|(?i)Hong))^((?!(台湾|日本|新加坡|美国|韩国|狮城|南朝鲜|US|SG|JP|KR|TW|台灣|美國|韓國|獅城)).)*$
🇨🇳 台湾节点 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$
🇺🇸 美国节点 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=(?=.*(美国|美國|US|洛杉矶|西雅图|(?i)States|American))^((?!(香港|台湾|日本|新加坡|韩国|狮城|南朝鲜|SG|JP|KR|HK|TW|台灣|韓國|獅城)).)*$
🇰🇷 韩国节点 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=(?=.*(KR|Korea|KOR|首尔|韩|韓|(?i)Korea))^((?!(香港|台湾|新加坡|美国|狮城|南朝鲜|US|SG|HK|TW|台灣|美國|獅城)).)*$
🇷🇺 俄罗斯节点 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=🇷🇺|俄罗斯|RU|莫斯科|圣彼得堡|喀山|哈尔科夫|乌法|新西伯利亚|下诺夫哥罗德|沃罗涅什
🇬🇧 英国节点 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=🇬🇧|英国|UK|伦敦|英格兰|伯明翰|泰恩河畔纽卡斯尔|利兹|爱丁堡|格拉斯哥|苏格兰
🇯🇵 日本节点 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=(?=.*(日本|JP|(?i)Japan))^((?!(香港|台湾|新加坡|美国|韩国|狮城|南朝鲜|US|SG|KR|HK|TW|台灣|美國|韓國|獅城)).)*$
🇸🇬 新加坡节点 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=(?=.*(新加坡|狮城|SG|(?i)Singapore))^((?!(香港|台湾|日本|美国|韩国|南朝鲜|US|JP|KR|HK|TW|台灣|美國|韓國)).)*$
🇮🇳 印度 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=🇮🇳|印度|IN|IND|孟买|新德里|高知|Republic of India|India
🇩🇪 德国 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=🇩🇪|德国|DEU|DE|柏林|慕尼黑|汉堡|科隆|Germany
🇨🇦 加拿大 = select,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=🇨🇦|加拿大|CA|渥太华

[Rule]
DOMAIN-SUFFIX,bestemby.com,DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/OpenAI/OpenAI.list,🤖️ AI
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Claude/Claude.list,🤖️ AI
RULE-SET,https://whatshub.top/rule/Grok.list,🤖️ AI
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Gemini/Gemini.list,🤖️ AI
RULE-SET,https://whatshub.top/rule/ai.list,🤖️ AI
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Shadowrocket/FitnessPlus/FitnessPlus.list,🚀 策略选择
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Shadowrocket/AppleProxy/AppleProxy.list,🚀 策略选择
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Apple/Apple.list,🍎 苹果服务
RULE-SET,https://whatshub.top/rule/LinkedIn.list,🚀 策略选择
RULE-SET,https://whatshub.top/rule/Kindle.list,🚀 策略选择
RULE-SET,https://whatshub.top/rule/ASN-CN.list,DIRECT

# 本地局域网地址的规则集
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Lan/Lan.list,DIRECT

# 表示CN地区的IP分流走直连，GEOIP数据库用来判断IP是否属于CN地区。默认使用Shadowrocket自带的GEOIP数据库，如果您想替换其他数据库，可在 设置 - GeoLite2数据库 里添加和修改。
GEOIP,CN,DIRECT

# 表示当其他所有规则都匹配不到时才使用FINAL规则的策略。
FINAL,🚀 策略选择

[Host]
# 域名指定本地值：
# example.com = 1.2.3.4

# 域名指定 DNS 服务器：
# example.com = server:1.2.3.4

# wifi名称指定 DNS 服务器，如需指定多个 DNS，可用逗号分隔：
# ssid:wifi名称 = server:1.2.3.4

*.apple.com = server:system
*.icloud.com = server:system
localhost = 127.0.0.1

[URL Rewrite]
# Google搜索引擎防跳转的重写。
^https?://(www.)?g.cn https://www.google.com 302
^https?://(www.)?google.cn https://www.google.com 302
