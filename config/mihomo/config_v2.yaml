# config_v2: Base on new settings; keep old proxy-groups and rules, plus Lan handling

# 订阅锚点（沿用新配置）
Providers:
  &Providers {
    exclude-filter: "Expire|到期|剩余|Traffic",
    type: http,
    interval: 86400,
    health-check:
      {
        enable: true,
        url: https://www.gstatic.com/generate_204,
        interval: 300,
      },
  }

# 官方配置文档: https://wiki.metacubex.one/config/proxy-providers/
proxy-providers:
  p1:
    <<: *Providers
    url: https://al121.cc/#/register?code=R7vdKxbE
    path: ./proxy_provider/p1.yaml
    override:
      additional-prefix: "p1 | "

  p2:
    <<: *Providers
    url: https://al121.cc/#/register?code=R7vdKxbE
    path: ./proxy_provider/p2.yaml
    override:
      additional-prefix: "p2 | "

# 节点（为兼容旧分组，补充直连）
proxies:
  - { name: 直连, type: direct }

# 通用配置（沿用新配置）
mode: rule
ipv6: true
mixed-port: 7890
allow-lan: true
bind-address: 0.0.0.0
log-level: error
unified-delay: true
find-process-mode: strict
global-client-fingerprint: chrome
profile:
  store-selected: true
  store-fake-ip: true
tcp-concurrent: true
keep-alive-interval: 15
keep-alive-idle: 15
disable-keep-alive: true

# DNS（沿用新配置）
dns:
  enable: true
  ipv6: true
  prefer-h3: false
  use-hosts: false
  use-system-hosts: false
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - "+.lan"
    - "+.local"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "localhost.ptlogin2.qq.com"
    - "localhost.sec.qq.com"
    - "localhost.work.weixin.qq.com"
    - "market.xiaomi.com"
    - "*.xiaomi.com"
    - "*.mi.com"
    - "*.miui.com"
    - "*.xiaomi.net"
    - "*.mi.net"
    - "*.miui.net"
    - "*.pcbeta.com"
  default-nameserver:
    - tls://223.5.5.5
    - tls://119.29.29.29
  nameserver:
    - https://1.1.1.1/dns-query
    - https://dns.google.com/dns-query
  proxy-server-nameserver:
    - https://doh.pub/dns-query
  direct-nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query

# GEO配置（沿用新配置）
geodata-mode: true
geo-auto-update: true
geo-update-interval: 24
geodata-loader: memconservative
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"

# 时间同步（沿用新配置）
ntp:
  enable: true
  write-to-system: false
  server: ntp1.aliyun.com
  port: 123
  interval: 30

# 入站（沿用新配置）
tun:
  enable: false
  stack: mixed
  auto-route: true
  auto-redirect: false
  auto-detect-interface: true
  dns-hijack:
    - any:53
    - tcp://any:53
  route-exclude-address: []
  mtu: 1500

# 嗅探（沿用新配置）
sniffer:
  enable: false
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: false
  sniff:
    TLS:
      ports:
        - 443
        - 8443
    HTTP:
      ports:
        - 80
        - 8080-8880
      override-destination: true
    QUIC:
      ports:
        - 443
        - 8443
  force-domain: []
  skip-domain:
    - +.oray.com
    - "Mijia Cloud"
    - "+.push.apple.com"

# 面板设置（沿用新配置）
external-controller: 127.0.0.1:9090
secret: ""
external-ui: "./ui"
external-ui-name: zashboard
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 代理组（沿用旧配置的简洁分组）
proxy-groups:
  - {
      name: 🚀 默认代理,
      type: select,
      proxies:
        [
          🔯 香港故转,
          🔯 日本故转,
          🔯 狮城故转,
          🔯 美国故转,
          🔯 台湾故转,
          ♻️ 香港自动,
          ♻️ 日本自动,
          ♻️ 狮城自动,
          ♻️ 美国自动,
          ♻️ 台湾自动,
          ♻️ 自动选择,
          🇭🇰 香港节点,
          🇯🇵 日本节点,
          🇸🇬 狮城节点,
          🇺🇲 美国节点,
          🇹🇼 台湾节点,
          🌐 全部节点,
          直连,
        ],
    }
  - {
      name: 🤖 AI,
      type: select,
      proxies:
        [
          🚀 默认代理,
          🔯 日本故转,
          🔯 狮城故转,
          🔯 美国故转,
          🔯 台湾故转,
          ♻️ 香港自动,
          ♻️ 日本自动,
          ♻️ 狮城自动,
          ♻️ 美国自动,
          ♻️ 台湾自动,
          ♻️ 自动选择,
          🇭🇰 香港节点,
          🇯🇵 日本节点,
          🇸🇬 狮城节点,
          🇺🇲 美国节点,
          🇹🇼 台湾节点,
          🌐 全部节点,
          直连,
        ],
    }
  - { name: 🍎 Apple, type: select, proxies: [直连, 🚀 默认代理] }
  - { name: 🎯 直连, type: select, proxies: [直连, 🚀 默认代理] }
  - {
      name: 🐟 漏网之鱼,
      type: select,
      proxies:
        [
          🚀 默认代理,
          🔯 香港故转,
          🔯 日本故转,
          🔯 狮城故转,
          🔯 美国故转,
          🔯 台湾故转,
          ♻️ 香港自动,
          ♻️ 日本自动,
          ♻️ 狮城自动,
          ♻️ 美国自动,
          ♻️ 台湾自动,
          ♻️ 自动选择,
          🇭🇰 香港节点,
          🇯🇵 日本节点,
          🇸🇬 狮城节点,
          🇺🇲 美国节点,
          🇹🇼 台湾节点,
          🌐 全部节点,
          直连,
        ],
    }
  - {
      name: 🇭🇰 香港节点,
      type: select,
      include-all: true,
      filter: "(?i)港|hk|hongkong|hong kong",
    }
  - {
      name: 🇯🇵 日本节点,
      type: select,
      include-all: true,
      filter: "(?i)日|jp|japan",
    }
  - {
      name: 🇸🇬 狮城节点,
      type: select,
      include-all: true,
      filter: "(?i)新加坡|坡|狮城|SG|Singapore",
    }
  - {
      name: 🇺🇲 美国节点,
      type: select,
      include-all: true,
      filter: "(?i)美|us|unitedstates|united states",
    }
  - {
      name: 🇹🇼 台湾节点,
      type: select,
      include-all: true,
      filter: "(?i)台|tw|taiwan|台湾",
    }
  - {
      name: 🔯 香港故转,
      type: fallback,
      include-all: true,
      tolerance: 20,
      interval: 300,
      filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$",
    }
  - {
      name: 🔯 日本故转,
      type: fallback,
      include-all: true,
      tolerance: 20,
      interval: 300,
      filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$",
    }
  - {
      name: 🔯 狮城故转,
      type: fallback,
      include-all: true,
      tolerance: 20,
      interval: 300,
      filter: "(?=.*(新加坡|坡|狮城|SG|Singapore))^((?!(台|日|韩|深|美)).)*$",
    }
  - {
      name: 🔯 美国故转,
      type: fallback,
      include-all: true,
      tolerance: 20,
      interval: 300,
      filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|韩|新|日)).)*$",
    }
  - {
      name: 🔯 台湾故转,
      type: fallback,
      include-all: true,
      tolerance: 20,
      interval: 300,
      filter: "(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$",
    }
  - {
      name: ♻️ 香港自动,
      type: url-test,
      include-all: true,
      tolerance: 20,
      interval: 300,
      filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$",
    }
  - {
      name: ♻️ 日本自动,
      type: url-test,
      include-all: true,
      tolerance: 20,
      interval: 300,
      filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$",
    }
  - {
      name: ♻️ 狮城自动,
      type: url-test,
      include-all: true,
      tolerance: 20,
      interval: 300,
      filter: "(?=.*(新加坡|坡|狮城|SG|Singapore))^((?!(港|台|韩|日|美)).)*$",
    }
  - {
      name: ♻️ 美国自动,
      type: url-test,
      include-all: true,
      tolerance: 20,
      interval: 300,
      filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|日|韩|新)).)*$",
    }
  - {
      name: ♻️ 台湾自动,
      type: url-test,
      include-all: true,
      tolerance: 20,
      interval: 300,
      filter: "(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$",
    }
  - {
      name: ♻️ 自动选择,
      type: url-test,
      include-all: true,
      tolerance: 20,
      interval: 300,
      filter: "^((?!(直连)).)*$",
    }
  - { name: 🌐 全部节点, type: select, include-all: true }

# 规则（沿用旧配置，并加入 Lan 处理）
rules:
  - DOMAIN-SUFFIX,bestemby.com,🎯 直连,no-resolve
  - RULE-SET,Lan,🎯 直连,no-resolve
  - RULE-SET,ai,🤖 AI
  - RULE-SET,Apple,🍎 Apple
  - RULE-SET,steam_cn,🎯 直连
  - RULE-SET,cn_domain,🎯 直连,no-resolve
  - GEOIP,cn,🎯 直连,no-resolve
  - MATCH,🐟 漏网之鱼

# 规则集（为兼容旧规则，沿用旧规则集，并补充 Lan）
rule-anchor:
  ip: &ip { type: http, interval: 86400, behavior: ipcidr, format: mrs }
  domain: &domain { type: http, interval: 86400, behavior: domain, format: mrs }
  class:
    &class { type: http, interval: 86400, behavior: classical, format: text }
  ClassicalYaml:
    &ClassicalYaml { behavior: classical, interval: 86400, type: http }

rule-providers:
  steam_cn:
    {
      <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/steam@cn.mrs",
    }
  ai:
    {
      <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.mrs",
    }
  Apple:
    {
      <<: *ClassicalYaml,
      url: https://testingcf.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Apple/Apple_Classical.yaml,
    }
  cn_domain:
    {
      <<: *domain,
      url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs",
    }
  Lan:
    {
      <<: *ClassicalYaml,
      url: "https://testingcf.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Lan/Lan_No_Resolve.yaml",
    }
